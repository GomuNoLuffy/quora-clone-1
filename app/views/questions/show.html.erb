<%= form_for @rel,
	:remote => true,
	:html => { :class => current_user.followed_questions.include?(@question) ? "follow_question hidden" : "follow_question"} do |f| %>
	<%= f.hidden_field :question_id, :value => @question.id %>
	<%= f.submit "Follow Question" %>
<% end %>

<%= form_for @rel,
	:remote => true,
	:html => { :class => current_user.followed_questions.include?(@question) ? "unfollow_question" : "unfollow_question hidden" , :method => :delete } do |f| %>
	<%= f.hidden_field :question_id, :value => @question.id %>
	<%= f.submit "Unfollow Question" %>
<% end %>

<% @question.topics.each do |topic| %>
	<span class="label label-inverse">
		<%= link_to topic.name, topic_url(topic) %>
	</span>
<% end %>

<h3><%= @question.title %></h3>

<p><%= @question.body %></p>

<a class="get_comment_area">Leave a Comment</a>

<hr width="80%">
<p><span id="answers_count"><%= pluralize(@answers.count, 'Answer')%></span></p>
<hr width="80%">

<div class="comment_area hidden">
	<%= link_to current_user.username, user_url(current_user) %><br />

	<%= form_for @comment, html: { class: "new_comment" }, :remote => true do |f| %>
		<%= f.text_area(:body, rows: 3) %><br />
		<%= f.hidden_field(:question_id, :value => @question.id) %>

		<%= f.submit "Answer" %>
	<% end %>
	<hr width="80%">
</div>

<ul id="answers">
	<% @answers.each do |answer| %>
		<%= render :partial => "comments/nested_answer",
			:locals => { :answer => answer, :comment => @comment, :vote => @vote }%>
	<% end %>
</ul>

<script>
  // follow/unfollow question dynamic
	$(".follow_question").on("ajax:success", function(){
		$(".follow_question").toggleClass("hidden")
		$(".unfollow_question").toggleClass("hidden")
	})
	$(".unfollow_question").on("ajax:success", function(){
		$(".follow_question").toggleClass("hidden")
		$(".unfollow_question").toggleClass("hidden")
	})

	// Show comment box script
	$(".get_comment_area").on("click", function(event){
		$(".comment_area").toggleClass("hidden");
	})

	var deleteComment = function(){
		$(".delete_comment").on("ajax:success", function(event){
			$(event.currentTarget).parent("li").remove();
		})
	}();

	var toggleReplyBox = function(){
		$(".new_reply").on("click", function(event){
			event.preventDefault();
			var id = $(event.currentTarget).parent().attr("data-id");
			$("li").find("[new-comment-id=" + id + "]").toggleClass("hidden");
		});
	}();

	var upVoteAjax = function(){
		$(".upvote").on("ajax:success", function(){
			var count = $(event.currentTarget).parent().find(".votes_count").html();
			$(event.currentTarget).parent().find(".votes_count").html(count + " " + owl.pluralize('vote', count));
		});
	}();

	// Leave comment script
	$(".new_comment").on("ajax:success", function(event, data){
		var template = JST["comments/show"]({
			comment: data
		})

		$("#answers").append(template);
		$(".new_comment").find("textarea").val("");
		var count = parseInt($("#answers_count").html().replace(/\s.+/, "")) + 1;
		$("#answers_count").html(count + " " + owl.pluralize("Answer", count));
	})
</script>



